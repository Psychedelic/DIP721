name: Integration tests

on:
  pull_request:
    branches: [ develop, main ]
  push:
    branches:
      - main
      - developer

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: 1
      DEBUG: 0
      DFX_VERSION: 0.9.3
      DFX_WARNING: -version_check
      NODE_ENV: ci
      DFX_CANDID_RELEASE: 2022-01-06

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Cache Rust
        uses: actions/cache@v2
        id: cache-rust
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
          default: true
          override: true
          target: wasm32-unknown-unknown

      - name: Install ic-cdk-optimizer
        if: steps.cache-rust.outputs.cache-hit != 'true'
        run: cargo install ic-cdk-optimizer

      - name: Cache Dfx
        id: cache-dfx
        uses: actions/cache@v2
        with:
          path: |
            /usr/local/bin/dfx
          key: cache-dfx-${{ hashFiles('dfx.json') }}-

      - name: Install DFX
        if: steps.cache-dfx.outputs.cache-hit != 'true'
        run: |
          yes Y | DFX_VERSION="$DFX_VERSION" sh -ci "$(curl -fsSL https://sdk.dfinity.org/install.sh)"

      - name: Cache npm modules
        id: cache-npm-integration-tests
        uses: actions/cache@v2
        with:
          path: |
            $(pwd)/test/node_modules
          key: cache-cache-npm-integration-tests-${{ hashFiles('./test/package.json') }}

      - name: Install global npm modules
        run: cd test && npm install

      - name: Candid didc install
        if: steps.cache-didc.outputs.cache-hit != 'true'
        run: |
          wget https://github.com/dfinity/candid/releases/download/"$DFX_CANDID_RELEASE"/didc-linux64
          chmod +x ./didc-linux64
          ln -s "$(pwd)/didc-linux64" /usr/local/bin/didc

      - name: Integration tests
        run: make lint && make test
